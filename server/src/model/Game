import {Card} from './card';
import {Pile} from './Pile';

export class Game{
    handPlayer1 : Pile;
    handPlayer2 : Pile;
    drawDeck : Pile;
    discardPile : Pile;

    gameCode : String;

    currentPlayer : number;

    constructor(){
        let handPlayer1 = new Pile(true);
        let handPlayer2 = new Pile(true);
        let discardPile = new Pile(true);

        let drawDeck = new Pile(false);

        let currentPlayer = this.getRandomInt(2) + 1;
    }

    getRandomInt(max) : number {
        return Math.floor(Math.random() * max);
    }

    whoseTurn() : number {
        return this.currentPlayer;
    }

    switchPlayer() : void{
        this.currentPlayer += 1;
        if(this.currentPlayer > 2){
            this.currentPlayer = 1
        }
    }

    topOfDiscard() : Card{
        return this.discardPile.seeTopCard();
    }

    cardFromDrawPile(player) : void{
        switch(player){
            case 1: this.handPlayer1.addCard(this.drawDeck.pickTopCard());
            case 2: this.handPlayer1.addCard(this.drawDeck.pickTopCard());
            default: break;
        }
    }

    handSize(player) : number{
        switch(player){
            case 1: return this.handPlayer1.size();
            case 2: return this.handPlayer2.size();
            default: break;
        }
        return 0;
    }

    place(card, player) : void{
        if(player == 1){
            if(this.handPlayer1.remove(card)){
                this.discardPile.addCard(card);
            }
        } else if(player == 2){
            if(this.handPlayer2.remove(card)){
                this.discardPile.addCard(card);
            }
        }
    }
}